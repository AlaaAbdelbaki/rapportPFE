@startuml Authentification

actor Utilisateur as user
participant "Logique de l'application" as logic
participant IHM as IHM
database "Serveurs\nGoogle\Apple" as server
database "Serveur\nback-end" as backend


logic -> logic ++ : Vérification de connexion
logic -> logic : Recherche du JWT sauvegardé dans le stockage de l'application.
alt JWT touvé
logic -> backend ++ : Envoi du JWT.
backend -> backend : Vérification de la validité du JWT
alt JWT valide : 
backend -> logic : JWT Validé
logic -> logic : Redirection vers la page d'accueil
else JWT non valide
backend -> logic --: JWT non Validé
logic -> logic : Redirection vers la page de connexion
end
else JWT non trouvé
logic -> logic -- : Redirection vers la page de connexion
alt Utiliser "Sign in with Google / Apple"
user -> IHM : Appui sur le bouton "Google" ou "Apple".
user -> IHM : Choisir un compte.
IHM -> server ++ : Demande des détails du compte choisi
server -> IHM --: Envoi des détails du compte
else Utiliser Email et mot de passe.
user -> IHM ++: Saisie des identifiants.
IHM -> IHM : Validation des champs.
alt Champs non valides
IHM -> user : Envoyer un message d'erreur.
end
end
IHM -> backend ++ : Envoi des identifiants.
backend -> backend : Vérification des identifiants.
alt Identifiants valides
backend->IHM : Envoi du JWT.
logic -> logic : Sauvegarde du JWT.
IHM -> IHM : Transition vers la page d'accueil.
else Identifiants invalides
backend->IHM : Envoi d'un message d'erruer.
IHM -> user : Affichage d'un message d'erreur.
end 
end
@enduml
@startuml rent a car

actor Utilisateur as Utilisateur
participant IHM as IHM
database "Google Places API" as places
Utilisateur -> IHM ++: Saisie point de départ. 
IHM -> places ++: Envoyer le texte saisi.
places -> IHM --: Retourner la liste des adresses.
Utilisateur -> IHM : Choisir une adresse.
IHM -> Utilisateur : Afficher l'adresse sélectionnée sur Google Maps.
Utilisateur -> IHM : Choisir la date et l'heure de début de location.
Utilisateur -> IHM : Choisir la date et l'heure de fin de location.
Utilisateur -> IHM : Appuier sur le bouton "Trouver une voiture"
IHM -> IHM : Vérifier la validité de champs 
alt Champs valides
IHM -> Utilisateur : Afficher la page des voitures disponibles.
else Champs non valides
IHM -> Utilisateur : Afficher un message d'erreur
end 
@enduml
@startuml transfer

actor Utilisateur as Utilisateur
participant IHM as IHM
database "Google Places API" as places
database "Google Directions API" as directions


Utilisateur -> IHM ++: Saisie point de départ. 
IHM -> places ++: Envoyer le texte saisi.
places -> IHM --: Retourner la liste des adresses.
Utilisateur -> IHM : Choisir une adresse.
IHM -> Utilisateur : Afficher l'adresse sélectionnée \nsur Google Maps.
Utilisateur -> IHM: Saisie destination. 
IHM -> places ++: Envoyer le texte saisi.
places -> IHM --: Retourner la liste des adresses.
Utilisateur -> IHM : Choisir une adresse.
IHM -> Utilisateur : Afficher l'adresse sélectionnée \nsur Google Maps.
IHM -> directions ++: Envoyer les coordonnées des \nadresses de départ et d'arrivée.
directions->IHM --: Retourner une liste des meilleures \nroutes à suivre avec des estimations \nde temps et de durée.
IHM -> Utilisateur : Afficher la route avec une \nestimation de temps la plus courte \nsur Google Maps.
Utilisateur -> IHM : Choisir la date et l'heure de transfert.
Utilisateur -> IHM : Appuyer sur le bouton "Trouver une voiture"
IHM -> IHM : Vérifier la validité de champs 
alt Champs valides
IHM -> Utilisateur : Afficher la page des voitures disponibles.
else Champs non valides
IHM -> Utilisateur : Afficher un message d'erreur
end 
@enduml
@startuml choisir voiture

actor Utilisateur as user
participant IHM as ihm
database "Back-end" as backend

activate ihm

ihm -> backend ++: Demander la liste\ndes voitures disponibles\navec les paramètres\nde la recherche.
backend -> backend : Trouver des voitures disponibles\ndans les dates sélectionnées\net dans le préimètre de la\nposition du client.
backend --> ihm --: Retourner la liste\ndes voitures disponibles.
ihm --> user : Afficher la liste\ndes voitures disponibles.
user -> ihm : Appui sur la voiture sélectionnée.
ihm --> user : Redirection vers la page\nde détails de la voiture.
deactivate ihm

@enduml
@startuml home

actor Utilisateur as user
participant IHM as ihm
database "Base de données" as database

activate ihm 

ihm --> user : Afficher le nom et prénom\nde l'utilisateur.
ihm -> database ++ : Demander les services\nen cours de l'utilisateur.
database -> database : Recherche des services\nen cours de l'utilisateur.
database --> ihm --: Retourner liste des services\nen cours de l'utilisateur
alt Liste des services vide
ihm --> user : Afficher les services en cours.
else Liste des services non vide
ihm --> user : Afficher deux options :\n- Louer une voiture\n- Demander un Transfert
end

deactivate ihm 
@enduml

@startuml register

actor Utilisateur as user
participant IHM as ihm
database "Serveur back-end" as database

activate ihm

alt Choisir email et mot de passe
user -> ihm : Saisie email et mot de passe.
ihm -> database ++: Envoi des données saisies
database -> database : Recherche du compte\nutilisant l'email saisi.
alt Compte non existant
database --> ihm : Envoi réponse positive.
ihm -> ihm : Redirection vers\n"Terminer la création du compte"
else Compte existant
database --> ihm : Envoi réponse négative.
ihm --> user : Affichage message d'erreur.
end

else Choisir Google 
user -> ihm : Appui sur le bouton "Sign in with Google"
ihm -> "Google API" ++: Récupération des données de l'utilisateur. 
"Google API" --> ihm -- : Réponse avec les informations de l'utilisateur. 
ihm -> database : Envoi des données au serveur 
database -> database : Recherche du compte\nutilisant l'email utilisé.
alt Compte non existant
database --> ihm : Envoi réponse positive.
ihm -> ihm : Redirection vers\n"Terminer la création du compte"
else Compte existant
database --> ihm : Envoi réponse négative.
ihm --> user : Affichage message d'erreur.
end

else Choisir Apple

user -> ihm : Appui sur le bouton "Sign in with Apple"
ihm -> "Apple API" ++: Récupération des données de l'utilisateur. 
"Apple API" --> ihm -- : Réponse avec les informations de l'utilisateur. 
ihm -> database : Envoi des données au serveur 
database -> database : Recherche du compte\nutilisant l'email utilisé.
alt Compte non existant
database --> ihm : Envoi réponse positive.
ihm -> ihm : Redirection vers\n"Terminer la création du compte"
else Compte existant
database --> ihm : Envoi réponse négative.
ihm --> user : Affichage message d'erreur.
end

end

deactivate database
deactivate ihm

@enduml

@startuml register_email

actor Utilisateur as user
participant IHM as ihm 
database "Base de données" as database

user -> ihm : Saisie email et mot de passe.
ihm -> database ++: Envoi des données saisies
database -> database : Recherche du compte\nutilisant l'email saisi.
alt Compte non existant
database --> ihm --: Envoi réponse positive.
ihm --> user : Redirection vers\n"Terminer la création du compte".
user -> ihm : Saisie des informations nécessaires.
ihm -> ihm : Valider les champs saisis.
alt Champs valides
ihm -> database : Envoi des informations de l'utilisateur.
database -> database : Création du compte utilisateur.
database --> user : Envoi e-mail de confirmation. 
database --> ihm : Envoi réponse positive.
ihm --> user : Redirection vers la page de connexion.
else Champs non valides
ihm --> user : Affichage message d'erreur.
end
else Compte existant
database --> ihm : Envoi réponse négative.
ihm --> user : Affichage message d'erreur.
end

@enduml

@startuml apple_google

actor Utilisateur as user
participant IHM as ihm 
database "Serveurs\nApple / Google" as server
database "Base de données" as database


user->ihm ++: Appui sur le bouton\n"Login with Google"
ihm --> user : Afficher un menu de sélection de compte.
user -> ihm : Choisir un compte.
ihm -> server ++: Demande des informations\ndu compte choisi. 
server --> ihm --: Retourner les informations\ndu compte choisi.
ihm -> database ++ : Vérification de l'existance du compte.
alt Compte non existant
database --> ihm : Autoriser la connexion
ihm --> user : Redirection vers la page de finalisation.
user -> ihm : Saisie des informations manquantes.
ihm -> ihm : Validation des champs.
else Compte existant
database --> ihm --:  Envoi erreur.
ihm --> user --: Affichage message d'erreur.
end


@enduml


@startuml docusign

actor Utilisateur as user
participant IHM as ihm
database "Back-end" as database
database "DocuSign API" as docusign

activate ihm
user -> ihm : Appui sui "Book now".
ihm -> database ++: Envoi des détails de la réservation.
database -> database : Créer une réservation.
database -> database : Créer le contrat numérique.
database -> docusign ++: Envoyer le contrat.
docusign --> user : Envoyer le contrat\nà signer par mail.
docusign --> database --: Envoyer l'identifiant du contrat.
database -> database : Mettre à jour la réservation\navec l'identifiant du contrat.
database --> ihm --: Envoyer les détails de la réservation.
ihm -> user : Redériger vers la page de\nvérification de signature.
user -> docusign ++: Signer le document.
user -> ihm : Appuier sur "Verify Signature".
ihm -> database ++: Demander l'état de la réservation.
database -> docusign : Demander l'état du contrat.
docusign --> database --:Envoyer l'état du contrat.
database --> ihm --:Envoyer l'état du contrat.
alt Etat du contrat "sent"
    ihm --> user : Afficher un message d'erreur.
else Etat du contrat "completed"
    ihm --> user : Redériger vers la page de paiement.    
end

deactivate ihm


@enduml



@startuml payment

actor Utilisateur as user
participant IHM as ihm
database "Back-end" as database
database "Google Pay / Apple Pay" as pay

activate ihm

user -> ihm : Appuier sur le bouton de paiement.
ihm --> user : Ouverture de l'application de paiement.
user -> pay ++: Paiement du service choisi.
alt Paiement accepté
    pay --> ihm : Envoi détails\nde paiement.
    ihm -> database ++: Envoyer les nouveaux\ndétails de réservation.
    database -> database : Mettre à jour l'état\nde réservation.
    database --> ihm --: Envoi du résultat\nde mise à jour.
    ihm --> user : Redirection vers la page d'accueil.
else Paiement non accepté
    pay --> ihm --: Envoi détails paiement.
    ihm --> user : Affichage message d'erreur.
end


deactivate ihm

@enduml


